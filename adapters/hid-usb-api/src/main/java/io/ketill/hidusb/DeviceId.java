package io.ketill.hidusb;

import java.util.Objects;

/**
 * A simple descriptor for a device based on its vendor ID and product ID.
 * This is used by {@link SystemDeviceSeeker} to identify which devices are
 * currently being sought after.
 */
public final class DeviceId {

    private static void requireValidId(int vendorId, int productId) {
        String msgFormat = "%s 0x%X out of range" +
                ", must be within 0x0000 to 0xFFFF";
        if (vendorId < 0x0000 || vendorId > 0xFFFF) {
            String msg = String.format(msgFormat, "vendorId", vendorId);
            throw new IllegalArgumentException(msg);
        } else if (productId < 0x0000 || productId > 0xFFFF) {
            String msg = String.format(msgFormat, "productId", productId);
            throw new IllegalArgumentException(msg);
        }
    }

    public final int vendorId;
    public final int productId;

    /**
     * @param vendorId  the vendor ID.
     * @param productId the product ID.
     * @throws IllegalArgumentException if the vendor ID or product ID are
     *                                  not within range of {@code 0x0000}
     *                                  to {@code 0xFFFF}.
     */
    public DeviceId(int vendorId, int productId) {
        requireValidId(vendorId, productId);
        this.vendorId = vendorId;
        this.productId = productId;
    }

    /* @formatter:off */
    @Override /* generated by IntelliJ IDEA */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        DeviceId that = (DeviceId) o;
        return this.vendorId == that.vendorId
                && this.productId == that.productId;
    }
    /* @formatter:on */

    /* @formatter:off */
    @Override /* generated by IntelliJ IDEA */
    public int hashCode() {
        return Objects.hash(vendorId, productId);
    }
    /* @formatter:on */

    /* @formatter:off */
    @Override /* generated by IntelliJ IDEA */
    public String toString() {
        return "DeviceId{" +
                "vendorId=" + vendorId +
                ", productId=" + productId +
                '}';
    }
    /* @formatter:on */

}
